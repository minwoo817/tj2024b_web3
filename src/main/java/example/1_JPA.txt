1. console project  [ java , jdbc ]                                 + x
2. jsp project      [ java(servlet) , jdbc ]                        + (web)JSP(html+js+css)
3. spring project   [ spring( java(servlet) ) , mybatis(jdbc) ]     + (web)REACT(html+js+css)
4. spring project   [ spring( java(servlet) ) , JPA(jdbc) ]         + (app)Flutter(dart)
------------------------------------------------------------------------------------------
[ DB ]
    1. 데이터베이스 : 데이터들의 집합
    2. 테이버테이스 종류 : 관계형 데이터베이스(SQL)=Oracle/mysql , NOSQL = mongoDB
[JDBC]
    1. JABA DATABASE Connection : 자바에서 데이터베이스 연동하는 기술(인터페이스/클래스) 제공
    2. 주요 인터페이스 : Connection , PreparedStatement  , ResultSet
[myBatis]
    1. SQL Mapper 프레임워크 : SQL 를 자동으로 매핑 지원

[ORM]
    O : object , R : Relational , M : Mapping : 객체관계매핑
    1. 정의 : 객체지향 프로그램에서 사용하는 객체 와 (DB)관계형데이터베이스에서 사용하는 테이블과 매핑(연결)하는 기술
    2. 목적 : 개발자에게 편리성 제공
    3. 사용처 : JAVA , PYTHON 등등

[ Hibernate ]
    1. 정의 : 자바에서 ORM을 구현한 프레임워크 , ORM 사용할수 있는 라이브러리
    2. 목적 : 자바 개발자가 SQL 없이 데이터베이스 테이블를 다룬다.
       1. SQL 쿼리를 자동으로 생성하므로 개발자가 직접 SQL 작성하지 않아도 된다. [ 빠른 개발 ]
           -> 간단한 쿼리는 지원 , 복잡한 쿼리는 직접
       2. 자동으로 타입 변환 해준다.
       3. 코드 간결한 제공
       등등

[ JPA ]
    java , persistence(영속성) , api
    1. 정의 : 자바에서 ORM을 사용할때 표준 API , 자바에서 ORM 어떻게 처리할지 정의한 라이브러리(인터페이스/어노테이션/클래스)